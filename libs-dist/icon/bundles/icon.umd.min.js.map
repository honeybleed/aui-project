{"version":3,"file":"icon.umd.min.js","sources":["../../../libs/aui-icon-build/tmp/mode/icon-map.ts","../../../libs/aui-icon-build/tmp/mode/icon-config.ts","../../../libs/aui-icon-build/tmp/service/icon-manage.service.ts","../../../libs/aui-icon-build/tmp/component/icon.component.ts","../../../libs/aui-icon-build/tmp/aui-icon.module.ts"],"sourcesContent":["import { IconItem } from './icon-item';\n/**\n *  class to describe a group of icon by one font-family\n */\nexport class IconMap {\n/**\n * font family to split different icons\n */\npublic family: string;\n/**\n *\n */\npublic map: IconItem[];\n}\n\nfunction IconMap_tsickle_Closure_declarations() {\n/**\n * font family to split different icons\n * @type {?}\n */\nIconMap.prototype.family;\n/**\n *\n * @type {?}\n */\nIconMap.prototype.map;\n}\n\n\nexport const /** @type {?} */ commonIcons: IconMap = {\n  family: 'common-icon',\n  map: [\n    {name: 'window-close', code: '\\ue93b'}\n  ]\n};\n","import { IconMap } from './icon-map';\nexport class IconConfig {\n  [index: number]: IconMap\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { commonIcons, IconMap } from '../mode/icon-map';\nimport { IconItem } from '../mode/icon-item';\nimport { IconConfig } from '../mode/icon-config';\n/**\n * Config and read icon families\n */\nexport class IconManageService {\nprivate _icon_map_cache: Map<string, IconMap>;\n/**\n * @param {?} config\n */\nconstructor( config: IconConfig) {\n    this._icon_map_cache = new Map();\n    this._icon_map_cache.set(commonIcons.family, commonIcons);\n    for (const mapItem of config as Array<IconMap>) {\n      if (this._icon_map_cache.has(mapItem.family)) {\n        console.warn('IconMap family named [' + mapItem.family + '] is overwrote!');\n        this._icon_map_cache.set(mapItem.family, mapItem);\n      } else {\n        this._icon_map_cache.set(mapItem.family, mapItem);\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic getIconFamilies(): string[] {\n    const /** @type {?} */ families: string[] = [];\n    for (const /** @type {?} */ family in this._icon_map_cache) {\n      if (family) {\n        families.push(family);\n      }\n    }\n    return families;\n  }\n/**\n * @return {?}\n */\npublic getIconMaps(): Map<string, IconMap> {\n    const /** @type {?} */ maps: Map<string, IconMap> = new Map();\n    for (const /** @type {?} */ family in this._icon_map_cache) {\n      if (family) {\n        maps.set(family, this._icon_map_cache.get(family));\n      }\n    }\n    return maps;\n  }\n/**\n * @param {?} family\n * @param {?} name\n * @return {?}\n */\npublic getIcon(family: string, name: string): IconItem {\n    const /** @type {?} */ t_family = this._icon_map_cache.get(family);\n    if (!t_family) {\n      return null;\n    }\n    const /** @type {?} */ t_item = t_family.map.find((value: IconItem) => {\n      return value.name === name;\n    });\n    if (!t_item) {\n      return null;\n    }\n    return {\n      name: t_item.name,\n      code: t_item.code\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IconConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction IconManageService_tsickle_Closure_declarations() {\n/** @type {?} */\nIconManageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconManageService.ctorParameters;\n/** @type {?} */\nIconManageService.prototype._icon_map_cache;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component, Input, OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { IconManageService } from '../service/icon-manage.service';\nimport { IconItem } from '../mode/icon-item';\nexport class IconComponent implements OnInit {\n   family: string;\n   icon: string;\n/**\n * @param {?} _iconManageService\n */\nconstructor(private _iconManageService: IconManageService) { }\n/**\n * @return {?}\n */\nfindIcon(): IconItem {\n    return this._iconManageService.getIcon(this.family, this.icon);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'aui-icon',\n  template: `\n    <span [style.font-family]=\"family\">{{findIcon().code}}</span>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IconManageService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'family': [{ type: Input },],\n'icon': [{ type: Input },],\n};\n}\n\nfunction IconComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nIconComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconComponent.ctorParameters;\n/** @type {?} */\nIconComponent.propDecorators;\n/** @type {?} */\nIconComponent.prototype.family;\n/** @type {?} */\nIconComponent.prototype.icon;\n/** @type {?} */\nIconComponent.prototype._iconManageService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconManageService } from './service/icon-manage.service';\nimport { IconComponent } from './component/icon.component';\nimport { IconConfig } from './mode/icon-config';\nexport class AuiIconModule {\n/**\n * @param {?} config\n * @return {?}\n */\nstatic forRoot(config: IconConfig): ModuleWithProviders {\n    return {\n      ngModule: AuiIconModule,\n      providers: [\n        {provide: IconConfig, useValue: config}\n      ]\n    }\n  }\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: AuiIconModule) {\n    if (parentModule) {\n      console.error('IconModule is Loaded already!');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  providers: [IconManageService],\n  declarations: [IconComponent],\n  exports: [IconComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuiIconModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction AuiIconModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuiIconModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuiIconModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["commonIcons","family","map","name","code","config","this","_icon_map_cache","Map","set","_a","_i","mapItem","has","console","warn","IconManageService","families","push","maps","get","t_family","t_item","find","value","type","Injectable","IconConfig","decorators","Optional","_iconManageService","IconComponent","getIcon","icon","Component","args","encapsulation","ViewEncapsulation","None","selector","template","styles","Input","parentModule","error","AuiIconModule","ngModule","providers","provide","useValue","NgModule","imports","CommonModule","declarations","exports","SkipSelf"],"mappings":"0SAIA,iBASA,OATA,gBAYaA,GAcXC,OAbQ,cAcRC,MACGC,KAbM,eAAgBC,KAAM,oBChBjC,OAFA,6BCWA,WADeC,GAEXC,KAAKC,gBAAkB,IAAIC,IAC3BF,KAAKC,gBAAgBE,IAAIT,EAAYC,OAAQD,GAC7C,IAAsB,QAAAU,EAAAL,EAAAM,WAAAA,KAAjB,IAAMC,OACLN,KAAKC,gBAAgBM,IAAID,EAAQX,SACnCa,QAAQC,KAAK,yBAA2BH,EAAQX,OAAS,mBACzDK,KAAKC,gBAAgBE,IAAIG,EAAQX,OAAQW,IAEzCN,KAAKC,gBAAgBE,IAAIG,EAAQX,OAAQW,IA0DjD,OAtDGI,4BAGH,WACI,IAHMC,KAIN,IAAK,IAHMhB,KAAUK,KAAKC,gBAIpBN,GACFgB,EAHSC,KAAKjB,GAMlB,OAHOgB,GAGRD,wBAKH,WACI,IALMG,EAA6B,IAAIX,IAMvC,IAAK,IALMP,KAAUK,KAAKC,gBAMpBN,GACFkB,EALKV,IAAIR,EAAQK,KAAKC,gBAAgBa,IAAInB,IAQ9C,OALOkB,GAGRH,oBASH,SATGf,EAAAE,GAUC,IATMkB,EAAWf,KAAKC,gBAAgBa,IAAInB,GAU1C,IATKoB,EAUH,OATO,KAWT,IATMC,EAASD,EAASnB,IAAIqB,KAAK,SAACC,GAUhC,OATOA,EAAMrB,OAASA,IAWxB,OATKmB,GAaHnB,KATMmB,EAAOnB,KAUbC,KATMkB,EAAOlB,MAJN,0BAQXqB,KAAMC,eAGPV,iBAAA,WAAA,QAYAS,KAAME,EAAYC,aAAeH,KAAMI,gBCtExC,iBAMA,WADsBC,GAAAxB,wBAAAwB,EAmCtB,OA9BAC,qBAAA,WACI,OAJOzB,KAAKwB,mBAAmBE,QAAQ1B,KAAKL,OAAQK,KAAK2B,OAS7DF,qBAAA,iCAJEN,KAAMS,YAAWC,OAQjBC,cAPeC,oBAAkBC,KAQjCC,SAPU,WAQVC,SAPU,0EAUVC,QAPQ,cAMTV,iBAAA,WAAA,QAUAN,KAAMT,KAPAe,kBAUP9B,SATawB,KAAMiB,UAUnBT,OATWR,KAAMiB,WC9BjB,iBAgBA,WALeC,GAMPA,GACF7B,QAAQ8B,MAAM,iCAmBpB,OAlCGC,UAEH,SAFGxC,GAGC,OACEyC,SAFUD,EAGVE,YACGC,QAFSrB,EAAYsB,SAAU5C,0BAUtCoB,KAAMyB,WAAUf,OAMhBgB,SACEC,gBAEFL,WALW/B,GAMXqC,cALctB,GAMduB,SALSvB,OAIVc,iBAAA,WAAA,QAQApB,KAAMoB,EAAejB,aAAeH,KAAMI,aAAcJ,KAAM8B"}