{"version":3,"file":"icon.js","sources":["../../../libs/aui-icon-build/tmp/mode/icon-map.ts","../../../libs/aui-icon-build/tmp/mode/icon-config.ts","../../../libs/aui-icon-build/tmp/service/icon-manage.service.ts","../../../libs/aui-icon-build/tmp/component/icon.component.ts","../../../libs/aui-icon-build/tmp/aui-icon.module.ts","../../../libs/aui-icon-build/tmp/index.ts","../../../libs/aui-icon-build/tmp/icon.ts"],"sourcesContent":["import { IconItem } from './icon-item';\n/**\n *  class to describe a group of icon by one font-family\n */\nexport class IconMap {\n/**\n * font family to split different icons\n */\npublic family: string;\n/**\n *\n */\npublic map: IconItem[];\n}\n\nfunction IconMap_tsickle_Closure_declarations() {\n/**\n * font family to split different icons\n * @type {?}\n */\nIconMap.prototype.family;\n/**\n *\n * @type {?}\n */\nIconMap.prototype.map;\n}\n\n\nexport const /** @type {?} */ commonIcons: IconMap = {\n  family: 'common-icon',\n  map: [\n    {name: 'window-close', code: '\\ue93b'},\n    {name: 'eye', code: '\\ue722'},\n    {name: 'check', code: '\\ue69c'},\n    {name: 'alert-circle-outline', code: '\\ue614'}\n  ]\n};\n","import { IconMap } from './icon-map';\nexport class IconConfig {\n  [index: number]: IconMap\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { commonIcons, IconMap } from '../mode/icon-map';\nimport { IconItem } from '../mode/icon-item';\nimport { IconConfig } from '../mode/icon-config';\n/**\n * Config and read icon families\n */\nexport class IconManageService {\nprivate _icon_map_cache: Map<string, IconMap>;\n/**\n * @param {?} config\n */\nconstructor( config: IconConfig) {\n    this._icon_map_cache = new Map();\n    this._icon_map_cache.set(commonIcons.family, commonIcons);\n    for (const mapItem of config as Array<IconMap>) {\n      if (this._icon_map_cache.has(mapItem.family)) {\n        console.warn('IconMap family named [' + mapItem.family + '] is overwrote!');\n        this._icon_map_cache.set(mapItem.family, mapItem);\n      } else {\n        this._icon_map_cache.set(mapItem.family, mapItem);\n      }\n    }\n  }\n/**\n * @return {?}\n */\npublic getIconFamilies(): string[] {\n    const /** @type {?} */ families: string[] = [];\n    for (const /** @type {?} */ family in this._icon_map_cache) {\n      if (family) {\n        families.push(family);\n      }\n    }\n    return families;\n  }\n/**\n * @return {?}\n */\npublic getIconMaps(): Map<string, IconMap> {\n    const /** @type {?} */ maps: Map<string, IconMap> = new Map();\n    this._icon_map_cache.forEach((value: IconMap, key: string) => {\n      maps.set(key, value);\n    });\n    return maps;\n  }\n/**\n * @param {?} family\n * @param {?} name\n * @return {?}\n */\npublic getIcon(family: string, name: string): IconItem {\n    const /** @type {?} */ t_family = this._icon_map_cache.get(family);\n    if (!t_family) {\n      return null;\n    }\n    const /** @type {?} */ t_item = t_family.map.find((value: IconItem) => {\n      return value.name === name;\n    });\n    if (!t_item) {\n      return null;\n    }\n    return {\n      name: t_item.name,\n      code: t_item.code\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IconConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction IconManageService_tsickle_Closure_declarations() {\n/** @type {?} */\nIconManageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconManageService.ctorParameters;\n/** @type {?} */\nIconManageService.prototype._icon_map_cache;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component, Input, OnInit,\n  ViewEncapsulation\n} from '@angular/core';\nimport { IconManageService } from '../service/icon-manage.service';\nimport { IconItem } from '../mode/icon-item';\nexport class IconComponent implements OnInit {\n   family: string;\n   icon: string;\n/**\n * @param {?} _iconManageService\n */\nconstructor(private _iconManageService: IconManageService) { }\n/**\n * @return {?}\n */\nfindIcon(): IconItem {\n    return this._iconManageService.getIcon(this.family, this.icon);\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'aui-icon',\n  template: `\n    <span [style.font-family]=\"family\">{{findIcon().code}}</span>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IconManageService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'family': [{ type: Input },],\n'icon': [{ type: Input },],\n};\n}\n\nfunction IconComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nIconComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconComponent.ctorParameters;\n/** @type {?} */\nIconComponent.propDecorators;\n/** @type {?} */\nIconComponent.prototype.family;\n/** @type {?} */\nIconComponent.prototype.icon;\n/** @type {?} */\nIconComponent.prototype._iconManageService;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconManageService } from './service/icon-manage.service';\nimport { IconComponent } from './component/icon.component';\nimport { IconConfig } from './mode/icon-config';\nexport class AuiIconModule {\n/**\n * @param {?} config\n * @return {?}\n */\nstatic forRoot(config: IconConfig): ModuleWithProviders {\n    return {\n      ngModule: AuiIconModule,\n      providers: [\n        {provide: IconConfig, useValue: config}\n      ]\n    }\n  }\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: AuiIconModule) {\n    if (parentModule) {\n      console.error('IconModule is Loaded already!');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  providers: [IconManageService],\n  declarations: [IconComponent],\n  exports: [IconComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuiIconModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction AuiIconModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuiIconModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuiIconModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// export * from './your/main.module';\nexport {AuiIconModule} from './aui-icon.module';\nexport {IconManageService} from './service/icon-manage.service';\nexport {IconComponent} from './component/icon.component';\nexport {IconConfig} from './mode/icon-config';\nexport {IconItem} from './mode/icon-item';\nexport {IconMap,commonIcons} from './mode/icon-map';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AuiIconModule,IconManageService,IconComponent,IconConfig,IconItem,IconMap,commonIcons} from './index';\n"],"names":[],"mappings":";;;AACA;;;AAGA;CASC;AAED,AACO,MAAM,WAAA,GAAuB;IAclC,MAAM,EAbE,aAAA;IAcR,GAAG,EAbE;QAcH,EAAC,IAbC,EAAK,cAAA,EAAgB,IAAA,EAAM,QAAA,EAAS;QActC,EAAC,IAbC,EAAK,KAAA,EAAO,IAAA,EAAM,QAAA,EAAS;QAc7B,EAAC,IAbC,EAAK,OAAA,EAAS,IAAA,EAAM,QAAA,EAAS;QAc/B,EAAC,IAbC,EAAK,sBAAA,EAAwB,IAAA,EAAM,QAAA,EAAS;KAc/C;CACF;;;CClCA;;ACCD;;;AAGA;;;;IAKA,YADe,MAAQ;QAEnB,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;QAC1D,KAAK,MAAM,OAAO,IAAI,MAAwB,EAAE;YAC9C,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC5C,OAAO,CAAC,IAAI,CAAC,wBAAwB,GAAG,OAAO,CAAC,MAAM,GAAG,iBAAiB,CAAC,CAAC;gBAC5E,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aACnD;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aACnD;SACF;KACF;;;;IACA,eAAA;QAIC,uBAHM,QAAA,GAAqB,EAAA,CAAG;QAI9B,KAAK,uBAHM,MAAA,IAAU,IAAA,CAAK,eAAC,EAAgB;YAIzC,IAAI,MAHC,EAAO;gBAIV,QAAQ,CAHC,IAAC,CAAI,MAAC,CAAM,CAAC;aAIvB;SACF;QACD,OAHO,QAAA,CAAS;KAIjB;;;;IADA,WAAA;QAMC,uBALM,IAAA,GAA6B,IAAI,GAAA,EAAI,CAAE;QAM7C,IAAI,CALC,eAAC,CAAe,OAAC,CAAO,CAAC,KAAO,EAAS,GAAK;YAMjD,IAAI,CALC,GAAC,CAAG,GAAC,EAAI,KAAA,CAAM,CAAC;SAMtB,CALC,CAAC;QAMH,OALO,IAAA,CAAK;KAMb;;;;;;IAHA,OAAA,CAAA,MAAA,EAAA,IAAA;QAUC,uBATM,QAAA,GAAW,IAAA,CAAK,eAAC,CAAe,GAAC,CAAG,MAAC,CAAM,CAAC;QAUlD,IAAI,CATC,QAAC,EAAS;YAUb,OATO,IAAA,CAAK;SAUb;QACD,uBATM,MAAA,GAAS,QAAA,CAAS,GAAC,CAAG,IAAC,CAAI,CAAC,KAAO;YAUvC,OATO,KAAA,CAAM,IAAC,KAAQ,IAAA,CAAK;SAU5B,CATC,CAAC;QAUH,IAAI,CATC,MAAC,EAAO;YAUX,OATO,IAAA,CAAK;SAUb;QACD,OATO;YAUL,IAAI,EATE,MAAA,CAAO,IAAC;YAUd,IAAI,EATE,MAAA,CAAO,IAAC;SAGlB,CAFI;KAUH;;AARI,4BAAA,GAAoC;IAU3C,EATE,IAAA,EAAM,UAAA,EAAW;CAUlB,CATC;;;;AAED,gCAAA,GAAA,MAAA;IAYD,EAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;CACrD,CAAC;;;;;;IC/DF,YADsB,kBAAoB;QAApB,uBAAA,GAAA,kBAAA,CAAoB;KAAkB;;;;IAK5D,QAJG;QAKC,OAJO,IAAA,CAAK,kBAAC,CAAkB,OAAC,CAAO,IAAC,CAAI,MAAC,EAAO,IAAA,CAAK,IAAC,CAAI,CAAC;KAKhE;;;;IAIH,QAPG;KAQA;;AANI,wBAAA,GAAoC;IAQ3C,EAPE,IAAA,EAAM,SAAA,EAAW,IAAA,EAAM,CAAA;gBAQvB,aAAa,EAPE,iBAAA,CAAkB,IAAC;gBAQlC,QAAQ,EAPE,UAAA;gBAQV,QAAQ,EAPE;;GAST;gBACD,MAAM,EAPE,CAAA;;GASP,CAPC;aAQH,EAPC,EAAG;CAQJ,CAPC;;;;AAED,4BAAA,GAAA,MAAA;IAUD,EAAC,IAAI,EAAE,iBAAiB,GAAG;CAC1B,CAAC;AARK,4BAAA,GAAyD;IAUhE,QAAQ,EATE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;IAU3B,MAAM,EATE,CAAA,EAAG,IAAA,EAAM,KAAA,EAAM,EAAE;CAUxB,CATC;;;;;;ICfF,YALe,YAAe;QAM1B,IAAI,YAAY,EAAE;YAChB,OAAO,CAAC,KAAK,CAAC,+BAA+B,CAAC,CAAC;SAChD;KACF;;;;;IAfH,OAFG,OAAA,CAAA,MAAA;QAGC,OAFO;YAGL,QAAQ,EAFE,aAAA;YAGV,SAAS,EAFE;gBAGT,EAAC,OAFC,EAAQ,UAAA,EAAY,QAAA,EAAU,MAAA,EAAO;aAGxC;SACF,CAAA;KACF;;AAII,wBAAA,GAAoC;IAM3C,EALE,IAAA,EAAM,QAAA,EAAU,IAAA,EAAM,CAAA;gBAMtB,OAAO,EALE;oBAMP,YAAY;iBACb;gBACD,SAAS,EALE,CAAA,iBAAE,CAAiB;gBAM9B,YAAY,EALE,CAAA,aAAE,CAAa;gBAM7B,OAAO,EALE,CAAA,aAAE,CAAa;aAMzB,EALC,EAAG;CAMJ,CALC;;;;AAED,4BAAA,GAAA,MAAA;IAQD,EAAC,IAAI,EAAE,aAAa,EAAE,UAAU,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,EAAG,EAAC;CAC5E,CAAC;;ACzCF,sCAAC;;ACAD;;GAEG;;;;"}