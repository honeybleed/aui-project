{"version":3,"file":"component.umd.min.js","sources":["../../../libs/aui-component-build/tmp/icon/icon.directive.ts","../../../libs/aui-component-build/tmp/text-input/text-input.component.ts","../../../libs/aui-component-build/tmp/aui-component.module.ts"],"sourcesContent":["import { Directive, ElementRef, Input } from '@angular/core';\nimport { IconManageService } from '@aui/common';\nexport class IconObj {\n  family: string;\n  name: string;\n}\n\nfunction IconObj_tsickle_Closure_declarations() {\n/** @type {?} */\nIconObj.prototype.family;\n/** @type {?} */\nIconObj.prototype.name;\n}\n\nexport class IconDirective {\nprivate _iconObj: IconObj;\n/**\n * @param {?} obj\n * @return {?}\n */\nset iconObj (obj: IconObj) {\n    this._iconObj = obj;\n    this._renderIcon();\n  }\n/**\n * @param {?} _el\n * @param {?} _ims\n */\nconstructor(\nprivate _el: ElementRef,\nprivate _ims: IconManageService ) {\n    this._renderIcon();\n  }\n/**\n * @return {?}\n */\nprivate _renderIcon() {\n    if (this._iconObj) {\n      this._el.nativeElement.innerText = this._ims.getIcon(this._iconObj.family, this._iconObj.name).code;\n      this._el.nativeElement.style.fontFamily = this._iconObj.family;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[auiIcon]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: IconManageService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'iconObj': [{ type: Input },],\n};\n}\n\nfunction IconDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nIconDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconDirective.ctorParameters;\n/** @type {?} */\nIconDirective.propDecorators;\n/** @type {?} */\nIconDirective.prototype._iconObj;\n/** @type {?} */\nIconDirective.prototype._el;\n/** @type {?} */\nIconDirective.prototype._ims;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, Input, ViewEncapsulation } from '@angular/core';\nimport { ComponentWithStatus } from '@aui/common';\nimport { IconObj } from '../icon/icon.directive';\nexport class TextInputComponent extends ComponentWithStatus {\n   value: string;\n   placeholder: string;\n   icon: IconObj;\n   tail: IconObj;\n   label: string;\n   type: 'text' | 'password';\n/**\n * @param {?} v\n * @return {?}\n */\nset disable(v: boolean) {\n    this.isDisabled = v;\n  }\nconstructor() {\n     super(['hover', 'focus', 'valid-success', 'valid-error']);\n    if (!this.type) {\n      this.type = 'text';\n    }\n    if (!this.placeholder) {\n      this.placeholder = 'placeholder';\n    }\n    if (!this.value) {\n      this.value = '';\n    }\n  }\n/**\n * @return {?}\n */\nhasIcon(): boolean {\n    return !!this.icon;\n  }\n/**\n * @return {?}\n */\nhasTail(): boolean {\n    return !!this.tail;\n  }\n/**\n * @return {?}\n */\nhasLabel(): boolean {\n    return !!this.label;\n  }\n static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  encapsulation: ViewEncapsulation.None,\n  selector: 'aui-text-input',\n  template: `\n    <div class=\"aui-text-input-outlet\" [ngClass]=\"dumpStatus()\">\n      <div class=\"input-block\">\n        <span auiIcon [iconObj]=\"icon\" *ngIf=\"hasIcon()\" class=\"icon\"></span>\n        <span class=\"label\" *ngIf=\"hasLabel()\">{{label}}</span>\n        <input [type]=\"type\" [value]=\"value\" [disabled]=\"isDisabled\" [placeholder]=\"placeholder\"/>\n        <span class=\"tail\" auiIcon [iconObj]=\"tail\" *ngIf=\"hasTail()\"></span>\n      </div>\n    </div>\n  `,\n  styles: [`\n\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'icon': [{ type: Input },],\n'tail': [{ type: Input },],\n'label': [{ type: Input },],\n'type': [{ type: Input },],\n'disable': [{ type: Input },],\n};\n}\n\nfunction TextInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTextInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTextInputComponent.ctorParameters;\n/** @type {?} */\nTextInputComponent.propDecorators;\n/** @type {?} */\nTextInputComponent.prototype.value;\n/** @type {?} */\nTextInputComponent.prototype.placeholder;\n/** @type {?} */\nTextInputComponent.prototype.icon;\n/** @type {?} */\nTextInputComponent.prototype.tail;\n/** @type {?} */\nTextInputComponent.prototype.label;\n/** @type {?} */\nTextInputComponent.prototype.type;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconDirective } from './icon/icon.directive';\nimport { TextInputComponent } from './text-input/text-input.component';\nexport class AuiComponentModule {\nconstructor () {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [CommonModule],\n  declarations: [\n    IconDirective,\n    TextInputComponent\n  ],\n  exports: [\n    IconDirective,\n    TextInputComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuiComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuiComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuiComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["_el","_ims","this","_renderIcon","Object","IconDirective","obj","_iconObj","nativeElement","innerText","getIcon","family","name","code","style","fontFamily","type","Directive","args","selector","ElementRef","IconManageService","iconObj","Input","_super","_this","placeholder","value","__extends","TextInputComponent","v","isDisabled","icon","tail","label","ComponentWithStatus","Component","encapsulation","ViewEncapsulation","None","template","styles","disable","NgModule","imports","CommonModule","declarations","exports","AuiComponentModule"],"mappings":"uWAEA,iBAGA,OAHA,6BA0BA,WAduBA,EAAyBC,GAAzBC,SAAAF,EAAyBE,UAAAD,EAiB5CC,KAAKC,cA0BT,OArCAC,sBAVGC,2BAUH,SAVGC,GAWCJ,KAVKK,SAAWD,EAWhBJ,KAVKC,+CAKNE,wBAmBH,WACQH,KAnBKK,WAoBPL,KAnBKF,IAAIQ,cAAcC,UAAYP,KAAKD,KAAKS,QAAQR,KAAKK,SAASI,OAAQT,KAAKK,SAASK,MAAMC,KAoB/FX,KAnBKF,IAAIQ,cAAcM,MAAMC,WAAab,KAAKK,SAASI,6BAI5DK,KAAMC,YAAWC,OAoBjBC,SAnBU,gBAIXd,iBAAA,WAAA,QAsBAW,KAAMI,eACNJ,KAAMK,uBAnBAhB,kBAsBPiB,UArBcN,KAAMO,0UCjBpB,aAAA,MACKC,aAAO,QAAS,QAAS,gBAAiB,6BACtCC,EAAKT,OACRS,EAAKT,KAAO,QAETS,EAAKC,cACRD,EAAKC,YAAc,eAEhBD,EAAKE,QACRF,EAAKE,MAAQ,MAsDnB,OA3ECC,OASDxB,sBADGyB,2BACH,SADGC,GAEC5B,KADK6B,WAAaD,mCAkBtBD,oBAAA,WACI,QAJS3B,KAAK8B,MASlBH,oBAAA,WACI,QAPS3B,KAAK+B,MAYlBJ,qBAAA,WACI,QAVS3B,KAAKgC,UA9BjBC,sCAiCCnB,KAAMoB,YAAWlB,OAWjBmB,cAVeC,oBAAkBC,KAWjCpB,SAVU,iBAWVqB,SAVU,ucAoBVC,QAVQ,cAMTZ,iBAAA,WAAA,UAEMA,kBAaPF,QAZYX,KAAMO,UAalBG,cAZkBV,KAAMO,UAaxBS,OAZWhB,KAAMO,UAajBU,OAZWjB,KAAMO,UAajBW,QAZYlB,KAAMO,UAalBP,OAZWA,KAAMO,UAajBmB,UAZc1B,KAAMO,WC9DpB,iBAoBA,OAnBA,+BAIEP,KAAM2B,WAAUzB,OADhB0B,SAESC,gBADTC,cACEzC,EACAwB,GAEFkB,SACE1C,EACAwB,OAOHmB,iBAAA,WAAA"}