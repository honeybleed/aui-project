{"version":3,"file":"component.umd.min.js","sources":["../../../libs/aui-component-build/tmp/icon/icon.directive.ts","../../../libs/aui-component-build/tmp/common/component-with-status.ts","../../../libs/aui-component-build/tmp/text-input/text-input.component.ts","../../../libs/aui-component-build/tmp/aui-component.module.ts","../../../libs/aui-component-build/tmp/common/validate-helper.ts"],"sourcesContent":["import { Directive, ElementRef, Input } from '@angular/core';\nimport { IconManageService } from '@aui/common';\nexport class IconObj {\n  family: string;\n  name: string;\n}\n\nfunction IconObj_tsickle_Closure_declarations() {\n/** @type {?} */\nIconObj.prototype.family;\n/** @type {?} */\nIconObj.prototype.name;\n}\n\nexport class IconDirective {\nprivate _iconObj: IconObj;\n/**\n * @param {?} obj\n * @return {?}\n */\nset iconObj (obj: IconObj) {\n    this._iconObj = obj;\n    this._renderIcon();\n  }\n/**\n * @param {?} _el\n * @param {?} _ims\n */\nconstructor(\nprivate _el: ElementRef,\nprivate _ims: IconManageService ) {\n    this._renderIcon();\n  }\n/**\n * @return {?}\n */\nprivate _renderIcon() {\n    if (this._iconObj) {\n      this._el.nativeElement.innerText = this._ims.getIcon(this._iconObj.family, this._iconObj.name).code;\n      this._el.nativeElement.style.fontFamily = this._iconObj.family;\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[auiIcon]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: IconManageService, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'iconObj': [{ type: Input },],\n};\n}\n\nfunction IconDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nIconDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconDirective.ctorParameters;\n/** @type {?} */\nIconDirective.propDecorators;\n/** @type {?} */\nIconDirective.prototype._iconObj;\n/** @type {?} */\nIconDirective.prototype._el;\n/** @type {?} */\nIconDirective.prototype._ims;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ComponentWithStatus {\n  status: {[key: string]: boolean};\n  isDisabled = false;\n/**\n * @param {?} s\n */\nconstructor(s: string[]) {\n    this.status = {};\n    for (const i of s) {\n      this.status[i] = false;\n    }\n  }\n/**\n * @param {?} keys\n * @return {?}\n */\nsetStatus (keys: string[]) {\n    for (const /** @type {?} */ i of keys) {\n      if (this.status.hasOwnProperty(i)) {\n        this.status[i] = true;\n      }\n    }\n  }\n/**\n * @param {?} keys\n * @return {?}\n */\nunsetStatus (keys: string[]) {\n    for (const /** @type {?} */ i of keys) {\n      if (this.status.hasOwnProperty(i)) {\n        this.status[i] = false;\n      }\n    }\n  }\n/**\n * @return {?}\n */\ndumpStatus (): string {\n    const /** @type {?} */ ret = [];\n    if (this.isDisabled) {\n      ret.push('disable');\n      return ret.join(' ');\n    }\n    for (const /** @type {?} */ s of Object.getOwnPropertyNames(this.status)) {\n      if ( this.status.hasOwnProperty(s) && this.status[s]) {\n        ret.push(s);\n      }\n    }\n    return ret.join(' ');\n  }\n}\n\nfunction ComponentWithStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentWithStatus.prototype.status;\n/** @type {?} */\nComponentWithStatus.prototype.isDisabled;\n}\n\n","import {\n  ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, OnInit, Output, ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ComponentWithStatus } from '../common/component-with-status';\nimport { IconObj } from '../icon/icon.directive';\nimport { ValidateRet } from '../common/validate-ret';\nimport { ValidateHelper } from '../common/validate-helper';\nexport class TextInputComponent extends ComponentWithStatus implements OnInit {\n   value: string;\n   validateHelper: ValidateHelper;\n   placeholder: string;\n   icon: IconObj;\n   tail: IconObj;\n   label: string;\n   type: 'text' | 'password';\n/**\n * @param {?} v\n * @return {?}\n */\nset disable(v: boolean) {\n    this.isDisabled = v;\n  }\n   valueChanged = new EventEmitter<string>();\n   tailClicked = new EventEmitter<any>();\n   iconClicked = new EventEmitter<any>();\n   labelClicked = new EventEmitter<any>();\n   validated = new EventEmitter<ValidateRet>();\n   inputElement: ElementRef;\n/**\n * @param {?} _cdr\n */\nconstructor(private _cdr: ChangeDetectorRef) {\n     super(['hover', 'focus', 'mouse-down', 'validate-success', 'validate-error', 'validating']);\n  }\n/**\n * @return {?}\n */\nprivate hasIcon(): boolean {\n    return !!this.icon;\n  }\n/**\n * @return {?}\n */\nprivate hasTail(): boolean {\n    return !!this.tail;\n  }\n/**\n * @return {?}\n */\nprivate hasLabel(): boolean {\n    return !!this.label;\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onInput(event: any) {\n    this.value = event.target.value;\n    this.valueChanged.emit(this.value);\n    this.doValidate( true );\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nprivate onChange(event: any) {\n    this.value = event.target.value;\n    this.valueChanged.emit(this.value);\n    this.doValidate( false );\n  }\n/**\n * @param {?=} onInput\n * @return {?}\n */\ndoValidate(onInput: boolean = false) {\n    if (!this.isDisabled && this.validateHelper) {\n      this.setStatus(['validating']);\n      this.unsetStatus(['validate-error']);\n      this.unsetStatus(['validate-success']);\n      this.validateHelper.doValidate(this.value, onInput).then((ret) => {\n        this.unsetStatus(['validating']);\n        this.unsetStatus(['validate-error']);\n        this.setStatus(['validate-success']);\n        this.validated.emit(ret);\n      }).catch((err: ValidateRet) => {\n        this.unsetStatus(['validating']);\n        this.unsetStatus(['validate-success']);\n        this.setStatus(['validate-error']);\n        this.validated.emit(err);\n      });\n    }\n  }\n/**\n * @return {?}\n */\nprivate tailClick() {\n    if (!this.isDisabled) {\n      this.tailClicked.emit(null);\n    }\n  }\n/**\n * @return {?}\n */\nprivate iconClick() {\n    if (!this.isDisabled) {\n      this.iconClicked.emit(null);\n    }\n  }\n/**\n * @return {?}\n */\nprivate labelClick() {\n    if (!this.isDisabled) {\n      this.labelClicked.emit(null);\n    }\n  }\n/**\n * @return {?}\n */\nprivate mouseEnter() {\n    this.setStatus(['hover']);\n  }\n/**\n * @return {?}\n */\nprivate mouseLeave() {\n    this.unsetStatus(['hover']);\n  }\n/**\n * @return {?}\n */\nprivate inputFocus() {\n    this.setStatus(['focus']);\n  }\n/**\n * @return {?}\n */\nprivate inputBlur() {\n    this.unsetStatus(['focus']);\n  }\n/**\n * @return {?}\n */\nfocusInput() {\n    if (!this.isDisabled) {\n      this._cdr.detectChanges();\n      this.inputElement.nativeElement.focus();\n    }\n  }\n/**\n * @return {?}\n */\nselectAll() {\n    if (!this.isDisabled) {\n      this._cdr.detectChanges();\n      this.inputElement.nativeElement.select(0, this.value.length);\n    }\n  }\n/**\n * @return {?}\n */\nclearText() {\n    if (!this.isDisabled) {\n      this._cdr.detectChanges();\n      this.value = '';\n      this.valueChanged.emit(this.value);\n      this.doValidate();\n    }\n  }\n/**\n * @return {?}\n */\nngOnInit(): void {\n    if (!this.type) {\n      this.type = 'text';\n    }\n    if (!this.placeholder) {\n      this.placeholder = 'placeholder';\n    }\n    this.valueChanged.emit(this.value);\n    this.doValidate();\n  }\n static decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  selector: 'aui-text-input',\n  template: `\n    <div class=\"aui-text-input-outlet\" [ngClass]=\"dumpStatus()\" (mouseenter)=\"mouseEnter()\" (mouseleave)=\"mouseLeave()\">\n      <div class=\"input-block\">\n        <span auiIcon\n              (click)=\"iconClick()\"\n              [iconObj]=\"icon\"\n              *ngIf=\"hasIcon()\"\n              class=\"icon\"></span>\n        <span class=\"label\"\n              *ngIf=\"hasLabel()\"\n              (click)=\"labelClick() \">{{label}}</span>\n        <input [type]=\"type\"\n               [value]=\"value\"\n               [disabled]=\"isDisabled\"\n               [placeholder]=\"placeholder\"\n               (change)=\"onChange($event)\"\n               (input)=\"onInput($event)\"\n               (focus)=\"inputFocus()\"\n               (blur)=\"inputBlur()\" #input/>\n        <span class=\"tail\"\n              auiIcon [iconObj]=\"tail\"\n              *ngIf=\"hasTail()\"\n              (click)=\"tailClick()\"></span>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .aui-text-input-outlet{display:inline-block}\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ChangeDetectorRef, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'value': [{ type: Input },],\n'validateHelper': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'icon': [{ type: Input },],\n'tail': [{ type: Input },],\n'label': [{ type: Input },],\n'type': [{ type: Input },],\n'disable': [{ type: Input },],\n'valueChanged': [{ type: Output },],\n'tailClicked': [{ type: Output },],\n'iconClicked': [{ type: Output },],\n'labelClicked': [{ type: Output },],\n'validated': [{ type: Output },],\n'inputElement': [{ type: ViewChild, args: ['input', ] },],\n};\n}\n\nfunction TextInputComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nTextInputComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nTextInputComponent.ctorParameters;\n/** @type {?} */\nTextInputComponent.propDecorators;\n/** @type {?} */\nTextInputComponent.prototype.value;\n/** @type {?} */\nTextInputComponent.prototype.validateHelper;\n/** @type {?} */\nTextInputComponent.prototype.placeholder;\n/** @type {?} */\nTextInputComponent.prototype.icon;\n/** @type {?} */\nTextInputComponent.prototype.tail;\n/** @type {?} */\nTextInputComponent.prototype.label;\n/** @type {?} */\nTextInputComponent.prototype.type;\n/** @type {?} */\nTextInputComponent.prototype.valueChanged;\n/** @type {?} */\nTextInputComponent.prototype.tailClicked;\n/** @type {?} */\nTextInputComponent.prototype.iconClicked;\n/** @type {?} */\nTextInputComponent.prototype.labelClicked;\n/** @type {?} */\nTextInputComponent.prototype.validated;\n/** @type {?} */\nTextInputComponent.prototype.inputElement;\n/** @type {?} */\nTextInputComponent.prototype._cdr;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IconDirective } from './icon/icon.directive';\nimport { TextInputComponent } from './text-input/text-input.component';\nexport class AuiComponentModule {\nconstructor () {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    IconDirective,\n    TextInputComponent\n  ],\n  exports: [\n    IconDirective,\n    TextInputComponent\n  ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction AuiComponentModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuiComponentModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuiComponentModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ValidateHandler } from './validate-handler';\nimport { ValidateRet } from './validate-ret';\nexport class ValidateHelper {\n  handlers: ValidateHandler[] = [];\n  successMessage = '';\n/**\n * @param {?} validateHandlers\n * @param {?=} sM\n */\nconstructor(validateHandlers: ValidateHandler[], sM?: string) {\n    this.handlers = this.handlers.concat(validateHandlers);\n    if (sM) {\n      this.successMessage = sM;\n    }\n  }\n/**\n * @param {?} value\n * @param {?} onInput\n * @return {?}\n */\ndoValidate(value: any, onInput: boolean): Promise<ValidateRet> {\n    const /** @type {?} */ ret = {\n      ret: true,\n      msg: this.successMessage\n    };\n    const /** @type {?} */ arr: Promise<ValidateRet>[] = [];\n    if (onInput) {\n      for (const /** @type {?} */ validateHandler of this.handlers) {\n        if (validateHandler.validateOnInput) {\n          arr.push(validateHandler.doValidate(value));\n        }\n      }\n    } else {\n      for (const /** @type {?} */ validateHandler of this.handlers) {\n        arr.push(validateHandler.doValidate(value));\n      }\n    }\n    return new Promise<ValidateRet>((resolve, reject) => {\n      Promise.all(arr).then((validate: ValidateRet[]) => {\n        resolve(ret);\n      }).catch((err: ValidateRet) => {\n        reject(err);\n      })\n    });\n  }\n}\n\nfunction ValidateHelper_tsickle_Closure_declarations() {\n/** @type {?} */\nValidateHelper.prototype.handlers;\n/** @type {?} */\nValidateHelper.prototype.successMessage;\n}\n\n"],"names":["_el","_ims","this","_renderIcon","Object","IconDirective","obj","_iconObj","nativeElement","innerText","getIcon","family","name","code","style","fontFamily","type","Directive","args","selector","ElementRef","IconManageService","iconObj","Input","s","status","s_1","_i","i","ComponentWithStatus","keys","keys_1","hasOwnProperty","keys_2","ret","isDisabled","push","join","_a","getOwnPropertyNames","_cdr","_super","_this","EventEmitter","__extends","TextInputComponent","v","icon","tail","label","event","value","target","valueChanged","emit","doValidate","onInput","validateHelper","setStatus","unsetStatus","then","validated","catch","err","tailClicked","iconClicked","labelClicked","detectChanges","inputElement","focus","select","length","placeholder","Component","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","styles","ChangeDetectorRef","disable","Output","ViewChild","NgModule","imports","CommonModule","declarations","exports","AuiComponentModule","validateHandlers","sM","handlers","concat","successMessage","ValidateHelper","msg","arr","validateHandler","validateOnInput","_c","_b","Promise","resolve","reject","all","validate"],"mappings":"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"}