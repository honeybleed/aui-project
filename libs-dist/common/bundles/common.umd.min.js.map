{"version":3,"file":"common.umd.min.js","sources":["../../../libs/aui-common-build/tmp/mode/icon-map.ts","../../../libs/aui-common-build/tmp/mode/icon-config.ts","../../../libs/aui-common-build/tmp/service/icon-manage.service.ts","../../../libs/aui-common-build/tmp/aui-common.module.ts","../../../libs/aui-common-build/tmp/mode/component-with-status.ts"],"sourcesContent":["import { IconItem } from './icon-item';\n/**\n *  class to describe a group of icon by one font-family\n */\nexport class IconMap {\n/**\n * font family to split different icons\n */\npublic family: string;\n/**\n *\n */\npublic map: IconItem[];\n}\n\nfunction IconMap_tsickle_Closure_declarations() {\n/**\n * font family to split different icons\n * @type {?}\n */\nIconMap.prototype.family;\n/**\n *\n * @type {?}\n */\nIconMap.prototype.map;\n}\n\n\nexport const /** @type {?} */ commonIcons: IconMap = {\n  family: 'common-icon',\n  map: [\n    {name: 'window-close', code: '\\ue93b'},\n    {name: 'eye', code: '\\ue722'},\n    {name: 'check', code: '\\ue69c'},\n    {name: 'alert-circle-outline', code: '\\ue614'}\n  ]\n};\n","import { IconMap } from './icon-map';\nexport class IconConfig {\n  [index: number]: IconMap\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { commonIcons, IconMap } from '../mode/icon-map';\nimport { IconItem } from '../mode/icon-item';\nimport { IconConfig } from '../mode/icon-config';\n/**\n * Config and read icon families\n */\nexport class IconManageService {\nprivate _icon_map_cache: Map<string, IconMap>;\n/**\n * @param {?} config\n */\nconstructor( config: IconConfig) {\n    this._icon_map_cache = new Map();\n    this._icon_map_cache.set(commonIcons.family, commonIcons);\n    if (config) {\n      for (const mapItem of config as Array<IconMap>) {\n        if (this._icon_map_cache.has(mapItem.family)) {\n          console.warn('IconMap family named [' + mapItem.family + '] is overwrote!!');\n          this._icon_map_cache.set(mapItem.family, mapItem);\n        } else {\n          this._icon_map_cache.set(mapItem.family, mapItem);\n        }\n      }\n    } else {\n      console.log('no config of IconManageService');\n    }\n  }\n/**\n * @return {?}\n */\npublic getIconFamilies(): string[] {\n    const /** @type {?} */ families: string[] = [];\n    for (const /** @type {?} */ family in this._icon_map_cache) {\n      if (family) {\n        families.push(family);\n      }\n    }\n    return families;\n  }\n/**\n * @return {?}\n */\npublic getIconMaps(): Map<string, IconMap> {\n    const /** @type {?} */ maps: Map<string, IconMap> = new Map();\n    this._icon_map_cache.forEach((value: IconMap, key: string) => {\n      maps.set(key, value);\n    });\n    return maps;\n  }\n/**\n * @param {?} family\n * @param {?} name\n * @return {?}\n */\npublic getIcon(family: string, name: string): IconItem {\n    const /** @type {?} */ t_family = this._icon_map_cache.get(family);\n    if (!t_family) {\n      return null;\n    }\n    const /** @type {?} */ t_item = t_family.map.find((value: IconItem) => {\n      return value.name === name;\n    });\n    if (!t_item) {\n      return null;\n    }\n    return {\n      name: t_item.name,\n      code: t_item.code\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IconConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction IconManageService_tsickle_Closure_declarations() {\n/** @type {?} */\nIconManageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconManageService.ctorParameters;\n/** @type {?} */\nIconManageService.prototype._icon_map_cache;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { IconManageService } from './service/icon-manage.service';\nimport { IconConfig } from './mode/icon-config';\nexport class AuiCommonModule {\n/**\n * @param {?} config\n * @return {?}\n */\nstatic forRoot(config: IconConfig): ModuleWithProviders {\n    return {\n      ngModule: AuiCommonModule,\n      providers: [\n        IconManageService,\n        {provide: IconConfig, useValue: config},\n      ]\n    }\n  }\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: AuiCommonModule) {\n    if (parentModule) {\n      console.error('IconModule is Loaded already!');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuiCommonModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction AuiCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuiCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuiCommonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class ComponentWithStatus {\n  status: {[key: string]: boolean};\n  isDisabled = false;\n/**\n * @param {?} s\n */\nconstructor(s: string[]) {\n    this.status = {};\n    for (const i of s) {\n      this.status[i] = false;\n    }\n  }\n/**\n * @param {?} keys\n * @return {?}\n */\nsetStatus (keys: string[]) {\n    for (const /** @type {?} */ i of keys) {\n      if (this.status.hasOwnProperty(i)) {\n        this.status[i] = true;\n      }\n    }\n  }\n/**\n * @param {?} keys\n * @return {?}\n */\nunsetStatus (keys: string[]) {\n    for (const /** @type {?} */ i of keys) {\n      if (this.status.hasOwnProperty(i)) {\n        this.status[i] = false;\n      }\n    }\n  }\n/**\n * @return {?}\n */\ndumpStatus (): string[] {\n    const /** @type {?} */ ret = [];\n    if (this.isDisabled) {\n      ret.push('disable');\n      return ret;\n    }\n    for (const /** @type {?} */ s of Object.getOwnPropertyNames(this.status)) {\n      if ( this.status.hasOwnProperty(s) && this.status[s]) {\n        ret.push(s);\n      }\n    }\n    return ret;\n  }\n}\n\nfunction ComponentWithStatus_tsickle_Closure_declarations() {\n/** @type {?} */\nComponentWithStatus.prototype.status;\n/** @type {?} */\nComponentWithStatus.prototype.isDisabled;\n}\n\n"],"names":["commonIcons","family","map","name","code","config","this","_icon_map_cache","Map","set","_a","_i","mapItem","has","console","warn","log","IconManageService","families","push","maps","forEach","value","key","t_family","get","t_item","find","type","Injectable","IconConfig","decorators","Optional","parentModule","error","AuiCommonModule","ngModule","providers","provide","useValue","NgModule","args","SkipSelf","s","status","s_1","i","ComponentWithStatus","keys","keys_1","hasOwnProperty","keys_2","ret","isDisabled","Object","getOwnPropertyNames"],"mappings":"iPAIA,iBASA,OATA,gBAYaA,GAcXC,OAbQ,cAcRC,MACGC,KAbM,eAAgBC,KAAM,MAc5BD,KAbM,MAAOC,KAAM,MAcnBD,KAbM,QAASC,KAAM,MAcrBD,KAbM,uBAAwBC,KAAM,oBCnBzC,OAFA,6BCWA,WADeC,GAIX,GAFAC,KAAKC,gBAAkB,IAAIC,IAC3BF,KAAKC,gBAAgBE,IAAIT,EAAYC,OAAQD,GACzCK,EACF,IAAsB,QAAAK,EAAAL,EAAAM,WAAAA,KAAjB,IAAMC,OACLN,KAAKC,gBAAgBM,IAAID,EAAQX,SACnCa,QAAQC,KAAK,yBAA2BH,EAAQX,OAAS,oBACzDK,KAAKC,gBAAgBE,IAAIG,EAAQX,OAAQW,IAEzCN,KAAKC,gBAAgBE,IAAIG,EAAQX,OAAQW,QAI7CE,QAAQE,IAAI,kCAuDlB,OApDGC,4BAGH,WACI,IAHMC,KAIN,IAAK,IAHMjB,KAAUK,KAAKC,gBAIpBN,GACFiB,EAHSC,KAAKlB,GAMlB,OAHOiB,GAGRD,wBAKH,WACI,IALMG,EAA6B,IAAIZ,IASvC,OAHAF,KALKC,gBAAgBc,QAAQ,SAACC,EAAgBC,GAM5CH,EALKX,IAAIc,EAAKD,KAETF,GAGRH,oBASH,SATGhB,EAAAE,GAUC,IATMqB,EAAWlB,KAAKC,gBAAgBkB,IAAIxB,GAU1C,IATKuB,EAUH,OATO,KAWT,IATME,EAASF,EAAStB,IAAIyB,KAAK,SAACL,GAUhC,OATOA,EAAMnB,OAASA,IAWxB,OATKuB,GAaHvB,KATMuB,EAAOvB,KAUbC,KATMsB,EAAOtB,MAJN,0BAQXwB,KAAMC,eAGPZ,iBAAA,WAAA,QAYAW,KAAME,EAAYC,aAAeH,KAAMI,gBC3ExC,iBAiBA,WANeC,GAOPA,GACFnB,QAAQoB,MAAM,iCAapB,OA9BGC,UAGH,SAHG9B,GAIC,OACE+B,SAHUD,EAIVE,WACEpB,GACCqB,QAHSR,EAAYS,SAAUlC,0BAUtCuB,KAAMY,WAAUC,YAIjBN,iBAAA,WAAA,QASAP,KAAMO,EAAiBJ,aAAeH,KAAMI,aAAcJ,KAAMc,gBChCjE,iBAMA,WAJGC,GAADrC,iBADa,EAMXA,KAAKsC,UACL,IAAgB,QAAAC,IAAAlC,WAAAA,KAAX,IAAMmC,OACTxC,KAAKsC,OAAOE,IAAK,GAyCvB,OAlCAC,sBAAA,SARGC,GASC,IARgB,QAAAC,IAAAtC,WAAAA,KAQX,IARMmC,OASLxC,KARKsC,OAAOM,eAAeJ,KAS7BxC,KARKsC,OAAOE,IAAK,KAgBzBC,wBAAA,SAZGC,GAaC,IAZgB,QAAAG,IAAAxC,WAAAA,KAYX,IAZMmC,OAaLxC,KAZKsC,OAAOM,eAAeJ,KAa7BxC,KAZKsC,OAAOE,IAAK,KAmBzBC,uBAAA,WACI,IAfMK,KAgBN,GAAI9C,KAfK+C,WAiBP,OADAD,EAfIjC,KAAK,WACFiC,EAiBT,IAfgB,QAAA1C,EAAA4C,OAAOC,oBAAoBjD,KAAKsC,QAAhCjC,WAAAA,KAeX,IAfMgC,OACJrC,KAAKsC,OAAOM,eAAeP,IAAMrC,KAAKsC,OAAOD,IAgBhDS,EAfIjC,KAAKwB,GAkBb,OAfOS"}