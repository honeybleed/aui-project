!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core")):"function"==typeof define&&define.amd?define(["exports","@angular/core"],e):e(t.auiCommon={},t.ng.core)}(this,function(t,e){"use strict";var n=function(){return function(){}}(),o={family:"common-icon",map:[{name:"window-close",code:""},{name:"eye",code:""},{name:"check",code:""},{name:"alert-circle-outline",code:""}]},r=function(){return function(){}}(),a=function(){function t(t){if(this._icon_map_cache=new Map,this._icon_map_cache.set(o.family,o),t)for(var e=0,n=t;e<n.length;e++){var r=n[e];this._icon_map_cache.has(r.family)?(console.warn("IconMap family named ["+r.family+"] is overwrote!!"),this._icon_map_cache.set(r.family,r)):this._icon_map_cache.set(r.family,r)}else console.log("no config of IconManageService")}return t.prototype.getIconFamilies=function(){var t=[];for(var e in this._icon_map_cache)e&&t.push(e);return t},t.prototype.getIconMaps=function(){var t=new Map;return this._icon_map_cache.forEach(function(e,n){t.set(n,e)}),t},t.prototype.getIcon=function(t,e){var n=this._icon_map_cache.get(t);if(!n)return null;var o=n.map.find(function(t){return t.name===e});return o?{name:o.name,code:o.code}:null},t}();a.decorators=[{type:e.Injectable}],a.ctorParameters=function(){return[{type:r,decorators:[{type:e.Optional}]}]};var i=function(){function t(t){t&&console.error("IconModule is Loaded already!")}return t.forRoot=function(e){return{ngModule:t,providers:[a,{provide:r,useValue:e}]}},t}();i.decorators=[{type:e.NgModule,args:[{}]}],i.ctorParameters=function(){return[{type:i,decorators:[{type:e.Optional},{type:e.SkipSelf}]}]};var c=function(){function t(t){this.isDisabled=!1,this.status={};for(var e=0,n=t;e<n.length;e++){var o=n[e];this.status[o]=!1}}return t.prototype.setStatus=function(t){for(var e=0,n=t;e<n.length;e++){var o=n[e];this.status.hasOwnProperty(o)&&(this.status[o]=!0)}},t.prototype.unsetStatus=function(t){for(var e=0,n=t;e<n.length;e++){var o=n[e];this.status.hasOwnProperty(o)&&(this.status[o]=!1)}},t.prototype.dumpStatus=function(){var t=[];if(this.isDisabled)return t.push("disable"),t;for(var e=0,n=Object.getOwnPropertyNames(this.status);e<n.length;e++){var o=n[e];this.status.hasOwnProperty(o)&&this.status[o]&&t.push(o)}return t},t}();t.AuiCommonModule=i,t.IconManageService=a,t.IconMap=n,t.commonIcons=o,t.IconConfig=r,t.ComponentWithStatus=c,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=common.umd.min.js.map
