{"version":3,"file":"common.umd.js","sources":["../../../libs/aui-common-build/tmp/mode/icon-map.ts","../../../libs/aui-common-build/tmp/mode/icon-config.ts","../../../libs/aui-common-build/tmp/service/icon-manage.service.ts","../../../libs/aui-common-build/tmp/aui-common.module.ts","../../../libs/aui-common-build/tmp/index.ts","../../../libs/aui-common-build/tmp/common.ts"],"sourcesContent":["import { IconItem } from './icon-item';\n/**\n *  class to describe a group of icon by one font-family\n */\nexport class IconMap {\n/**\n * font family to split different icons\n */\npublic family: string;\n/**\n *\n */\npublic map: IconItem[];\n}\n\nfunction IconMap_tsickle_Closure_declarations() {\n/**\n * font family to split different icons\n * @type {?}\n */\nIconMap.prototype.family;\n/**\n *\n * @type {?}\n */\nIconMap.prototype.map;\n}\n\n\nexport const /** @type {?} */ commonIcons: IconMap = {\n  family: 'common-icon',\n  map: [\n    {name: 'window-close', code: '\\ue93b'},\n    {name: 'eye', code: '\\ue722'},\n    {name: 'check', code: '\\ue69c'},\n    {name: 'alert-circle-outline', code: '\\ue614'},\n    {name: 'arrow-down', code: '\\ue600'}\n  ]\n};\n","import { IconMap } from './icon-map';\nexport class IconConfig {\n  [index: number]: IconMap\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { commonIcons, IconMap } from '../mode/icon-map';\nimport { IconItem } from '../mode/icon-item';\nimport { IconConfig } from '../mode/icon-config';\n/**\n * Config and read icon families\n */\nexport class IconManageService {\nprivate _icon_map_cache: Map<string, IconMap>;\n/**\n * @param {?} config\n */\nconstructor( config: IconConfig) {\n    this._icon_map_cache = new Map();\n    this._icon_map_cache.set(commonIcons.family, commonIcons);\n    if (config) {\n      for (const mapItem of config as Array<IconMap>) {\n        if (this._icon_map_cache.has(mapItem.family)) {\n          console.warn('IconMap family named [' + mapItem.family + '] is overwrote!!');\n          this._icon_map_cache.set(mapItem.family, mapItem);\n        } else {\n          this._icon_map_cache.set(mapItem.family, mapItem);\n        }\n      }\n    } else {\n      console.log('no config of IconManageService');\n    }\n  }\n/**\n * @return {?}\n */\npublic getIconFamilies(): string[] {\n    const /** @type {?} */ families: string[] = [];\n    for (const /** @type {?} */ family in this._icon_map_cache) {\n      if (family) {\n        families.push(family);\n      }\n    }\n    return families;\n  }\n/**\n * @return {?}\n */\npublic getIconMaps(): Map<string, IconMap> {\n    const /** @type {?} */ maps: Map<string, IconMap> = new Map();\n    this._icon_map_cache.forEach((value: IconMap, key: string) => {\n      maps.set(key, value);\n    });\n    return maps;\n  }\n/**\n * @param {?} family\n * @param {?} name\n * @return {?}\n */\npublic getIcon(family: string, name: string): IconItem {\n    const /** @type {?} */ t_family = this._icon_map_cache.get(family);\n    if (!t_family) {\n      return null;\n    }\n    const /** @type {?} */ t_item = t_family.map.find((value: IconItem) => {\n      return value.name === name;\n    });\n    if (!t_item) {\n      return null;\n    }\n    return {\n      name: t_item.name,\n      code: t_item.code\n    };\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: IconConfig, decorators: [{ type: Optional }, ]},\n];\n}\n\nfunction IconManageService_tsickle_Closure_declarations() {\n/** @type {?} */\nIconManageService.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nIconManageService.ctorParameters;\n/** @type {?} */\nIconManageService.prototype._icon_map_cache;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { ModuleWithProviders, NgModule, Optional, SkipSelf } from '@angular/core';\nimport { IconManageService } from './service/icon-manage.service';\nimport { IconConfig } from './mode/icon-config';\nexport class AuiCommonModule {\n/**\n * @param {?} config\n * @return {?}\n */\nstatic forRoot(config: IconConfig): ModuleWithProviders {\n    return {\n      ngModule: AuiCommonModule,\n      providers: [\n        IconManageService,\n        {provide: IconConfig, useValue: config},\n      ]\n    }\n  }\n/**\n * @param {?} parentModule\n */\nconstructor(  parentModule: AuiCommonModule) {\n    if (parentModule) {\n      console.error('IconModule is Loaded already!');\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: AuiCommonModule, decorators: [{ type: Optional }, { type: SkipSelf }, ]},\n];\n}\n\nfunction AuiCommonModule_tsickle_Closure_declarations() {\n/** @type {?} */\nAuiCommonModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nAuiCommonModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","// export * from './your/main.module';\nexport {AuiCommonModule} from './aui-common.module';\nexport {IconManageService} from './service/icon-manage.service';\nexport {IconMap,commonIcons} from './mode/icon-map';\nexport {IconItem} from './mode/icon-item';\nexport {IconConfig} from './mode/icon-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport {AuiCommonModule,IconManageService,IconMap,commonIcons,IconItem,IconConfig} from './index';\n"],"names":["Injectable","Optional","NgModule","SkipSelf"],"mappings":"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"}